#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:base64", "base64")
#@ load("/lib/helpers.star", "get_bom_data_for_tkr_name", "get_no_proxy")
#@ load("/lib/helpers.star", "get_image_repo_for_component", "tkg_image_repo_customized", "tkg_image_repo_ca_cert", "tkg_image_repo_skip_tls_verify", "tkg_image_repo_hostname")

#@ if data.values.PROVIDER_TYPE != "tkg-service-vsphere":
#@   bomData = get_bom_data_for_tkr_name()
#@ end

#@ GLOBAL_NAMESPACE = "tanzu-standard"
#@ def kappcontrolleroverlay():

#@overlay/match by=overlay.subset({"kind":"ConfigMap","metadata":{"name": "kapp-controller-config"}})
---
metadata:
  namespace: #@ data.values.NAMESPACE
data:
  #@ if tkg_image_repo_customized() and tkg_image_repo_ca_cert():
  caCerts: #@ base64.decode(tkg_image_repo_ca_cert())
  #@ end
  #@ if data.values.TKG_HTTP_PROXY:
  httpProxy: #@ data.values.TKG_HTTP_PROXY
  httpsProxy: #@ data.values.TKG_HTTPS_PROXY
  noProxy: #@ get_no_proxy()
  #@ end
  #@ if tkg_image_repo_skip_tls_verify():
  dangerousSkipTLSVerify: #@ tkg_image_repo_hostname()
  #@ end

#@overlay/match by=overlay.subset({"kind":"Deployment","metadata":{"name": "kapp-controller"}})
---
metadata:
  namespace: #@ data.values.NAMESPACE
spec:
  template:
    spec:
      containers:
      #@overlay/match by=overlay.subset({"name":"kapp-controller"})
      - args:
        #@overlay/match by=overlay.subset("-packaging-global-namespace=kapp-controller-packaging-global")
        - #@ "-packaging-global-namespace={}".format(GLOBAL_NAMESPACE)
        #@overlay/append
        - -concurrency=2
      #@overlay/match by=overlay.subset({"name":"kapp-controller"})
      - image: #@ "{}/{}:{}".format(get_image_repo_for_component(bomData.components["kapp-controller"][0].images.kappControllerImage), bomData.components["kapp-controller"][0].images.kappControllerImage.imagePath, bomData.components["kapp-controller"][0].images.kappControllerImage.tag)
      #@overlay/match missing_ok=True
      hostNetwork: true
      #@overlay/match missing_ok=True
      priorityClassName: system-cluster-critical
      #@overlay/match missing_ok=True
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"

#@overlay/match by=overlay.subset({"kind":"Namespace","metadata":{"name": "kapp-controller"}}),expects="1+"
---
metadata:
  name: #@ data.values.NAMESPACE

#@overlay/match by=overlay.subset({"kind":"Namespace","metadata":{"name": "kapp-controller-packaging-global"}}),expects="1+"
---
metadata:
  name: #@ GLOBAL_NAMESPACE

#@overlay/match by=overlay.subset({"kind": "ServiceAccount","metadata": {"name": "kapp-controller-sa"}}),expects="1+"
---
metadata:
  namespace: #@ data.values.NAMESPACE

#@overlay/match by=overlay.subset({"kind": "ClusterRoleBinding","metadata": {"name": "kapp-controller-cluster-role-binding"}}),expects="1+"
---
subjects:
#@overlay/match by=overlay.subset({"kind": "ServiceAccount"}),expects="1+"
- namespace: #@ data.values.NAMESPACE

#@overlay/match by=overlay.all,expects="1+"
---
#@overlay/match missing_ok=True
metadata:
  #@overlay/match missing_ok=True
  annotations:
    #@overlay/match missing_ok=True
    tkg.tanzu.vmware.com/addon-type: "addons-management/kapp-controller"

#@overlay/match by=overlay.subset({"kind": "APIService"}),expects="1+"
---
spec:
  service:
    namespace: #@ data.values.NAMESPACE

#@overlay/match by=overlay.subset({"kind":"Service","metadata":{"name": "packaging-api"}})
---
metadata:
  namespace: #@ data.values.NAMESPACE

#@overlay/match by=overlay.subset({"kind": "ClusterRoleBinding","metadata": {"name": "pkg-apiserver:system:auth-delegator"}}),expects="1+"
---
subjects:
#@overlay/match by=overlay.subset({"kind": "ServiceAccount"}),expects="1+"
- namespace: #@ data.values.NAMESPACE

#@overlay/match by=overlay.subset({"kind": "RoleBinding","metadata": {"name": "pkgserver-auth-reader"}}),expects="1+"
---
subjects:
#@overlay/match by=overlay.subset({"kind": "ServiceAccount"}),expects="1+"
- namespace: #@ data.values.NAMESPACE


#@overlay/match by=overlay.subset({"kind":"CustomResourceDefinition","metadata":{"name": "packagerepositories.packaging.carvel.dev"}})
---
metadata:
  annotations:
    #@overlay/match missing_ok=True
    packaging.carvel.dev/global-namespace: #@ GLOBAL_NAMESPACE

#@ end
